pipeline {
    agent any
    environment{
        DOCKER_TAG = getDockerTag()
    }
    stages{
        stage('Build Docker Image'){
            steps{
                sh "docker build . -t sbabburu/nodeapp:${DOCKER_TAG} "
            }
        }
        stage('DockerHub Push'){
            steps{
                withCredentials([usernamePassword(credentialsId: 'docker_login', passwordVariable: 'passwd', usernameVariable: 'username')]) {
                     sh "docker push sbabburu/nodeapp:${DOCKER_TAG}"
                }
            }
        }
        stage('Deploy to DevServer'){
            steps {
                sh "chmod +x changeTag.sh"
                sh "./changeTag.sh ${DOCKER_TAG}"
                withCredentials([string(credentialsId: 'master_login', variable: 'masterpwd')]) {
                sh "scp -o StrictHostKeyChecking=no node-app-pod.yml -P ${masterpwd} cloud_user@34.221.106.158:/home/cloud_user"
                script{
                  try{
                    sh "ssh cloud_user@34.221.106.158 kubectl apply -f ."
                  } catch(error){
                    sh "ssh cloud_user@34.221.106.158 kubectl create -f ."
                    }
             }
                
            }}
        }
    }
}

def getDockerTag(){
    def tag  = sh script: 'git rev-parse HEAD', returnStdout: true
    return tag
}
